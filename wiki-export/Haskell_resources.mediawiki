TidalCycles is a domain specific language made with the Haskell programming language. Here's a place to collect recommended Haskell resources.

= Tidal-specific resources =

* [[Understanding the $]]
* [[Type signatures]]
* [[What is a pattern?]]
* [https://www.imn.htwk-leipzig.de/~waldmann/etc/untutorial/tc/ Tidal for programmers]

= Tidal-related resources =

* [https://www.youtube.com/watch?v=kGbelVBCWDk&list=PLyEzdf4cdMMHGqVnAzLV8eDXn6Ajj46JA NIL Haskell school] - video lectures by David Ogborn (not tidal-specific but by David who among other things works on Tidal and related projects)

= General resources =

Note that a lot of Haskell tutorials focus on lists, which are important to learn, but aren't used very often in Tidal.

* [https://github.com/soupi/haskell-study-plan/blob/master/README.org Haskell study plan]
* [https://learnxinyminutes.com/docs/haskell/ Learn Haskell in Y minutes]
* [http://learnyouahaskell.com/ Learn you a Haskell for great good]
* [http://euterpea.com/haskell-school-of-music/ Haskell school of expression book] ([http://haskell.cs.yale.edu/wp-content/uploads/2015/03/HSoM.pdf pdf of earlier version])
* [http://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html Functors, applicatives and monads in pictures]
* [http://haskellbook.com/ Haskell programming from first principles] - an in-depth book for beginners
* [http://www.cs.nott.ac.uk/~pszgmh/pih.html Programming in Haskell] - another nice book, by Graham Hutton
* [https://wiki.haskell.org/How_to_read_Haskell How to read Haskell] - A primer for learning how to work out yourself 'what does this function do?'
* [http://haskellbook.com/ Haskell programming from first principles] - by Christopher Allen and Julie Moronuki

[[Category:Reference]]