{{DISPLAYTITLE:rotL}} 
[[Type signature|Type]]: <syntaxhighlight lang="haskell" inline>rotL :: Time -> Pattern a -> Pattern a -> Pattern a</syntaxhighlight>

'''rotL''' Shifts a pattern back in time by the given amount, expressed in cycles.

This will skip to the fourth cycle when evaluated:
<source>
do
{
  resetCycles;
  d1 $ rotL 4 $ seqP [ 
    (0, 12, sound "bd bd*2"), 
    (4, 12, sound "hh*2 [sn cp] cp future*4"), 
    (8, 12, sound (samples "arpy*8" (run 16)))
  ]
}
</source>

Useful when building and testing out longer sequences.

= rotR =
'''rotR''' is the opposite of <source inline>rotL</source> as it shifts the pattern ''forwards'' in time.