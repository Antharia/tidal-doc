<languages/>
In Tidal 1.0.0, the way you interact with patterns has changed a bit.

The range of functions for interaction set up by default can be seen in the [https://github.com/tidalcycles/Tidal/blob/master/BootTidal.hs bootup code].

= Patterns by number and by name =

As before you can use <syntaxhighlight lang="haskell" inline>d1</syntaxhighlight>, <syntaxhighlight lang="haskell" inline>d2</syntaxhighlight> etc to start different patterns, e.g:

<syntaxhighlight lang="Haskell">
d1 $ sound "bd sd"

d1 $ silence
</syntaxhighlight>

But now as an alternative you can also use <syntaxhighlight lang="haskell" inline>p</syntaxhighlight> and specify ''any'' number, like this:

<syntaxhighlight lang="Haskell">
p 100323523 $ sound "bd sd"

p 100323523 $ silence
</syntaxhighlight>

Theoretically, you can have any number of patterns running at once.

You can also refer to them by name, if you want.

<syntaxhighlight lang="Haskell">
p "jimmy" $ sound "bd sd"
p "susan" $ sound "cp(3,8)"

p "jimmy" $ silence
p "susan" $ silence
</syntaxhighlight>

= Transitions =

If you want to do a transition, you put it in place of the <syntaxhighlight lang="haskell" inline>p</syntaxhighlight>, e.g.:

<syntaxhighlight lang="haskell">
xfade "susan" $ sound "gabba(3,8,<0 2 4>)"
xfade "susan" $ sound "cp*2"
</syntaxhighlight>

(The old t1, t2 etc method no longer works.)

= Doing things once =

If you just want a pattern to run for one cycle and then stop, you can do use <syntaxhighlight lang="haskell" inline>once</syntaxhighlight>:

<syntaxhighlight lang="haskell">
once $ s "bd sd(3,8)"
</syntaxhighlight>

= Changing tempo with setcps =

Just give it the number of cycles per second, for example if your cycle has two beats in, this will be the equivalent of 120 bpm:

<source>
setcps 1
</source>

= Changing tempo with cps =

<syntaxhighlight lang="haskell" inline>cps</syntaxhighlight> is no longer a standalone function (`setcps` above now does this), but a control pattern. Patterning cps is ''fun''. Patterns don't (yet) have independent tempos though, if you change it on one pattern, it changes on all of them.

<syntaxhighlight lang="haskell">
p "cpsfun" $ s "bd sd(3,8)" # cps (slow 8 $ 0.5 + saw)
</syntaxhighlight>

[[Category:Reference]]
[[Category:Tidal-1+]]