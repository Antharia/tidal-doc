<languages />
ランダム性を加えると、パターンに対し、特徴やバリエーションをすぐに与えられます。


<syntaxhighlight lang="Haskell" inline>sometimes</syntaxhighlight>  は <syntaxhighlight lang="Haskell" inline>every</syntaxhighlight> と似ていますが、セットの区切りで発動する代わりに、ランダムな確率で現れます。

<syntaxhighlight lang="Haskell">
d1 $ sometimes (# speed "2") $ sound "drum*8"
</syntaxhighlight>

<syntaxhighlight lang="Haskell" inline>often</syntaxhighlight> は<syntaxhighlight lang="Haskell" inline>sometimes</syntaxhighlight> と似ていますが、より頻繁に発動します!

<syntaxhighlight lang="Haskell">
d1 $ often (# speed "2") $ sound "drum*8"
</syntaxhighlight>

<syntaxhighlight lang="Haskell" inline>irand</syntaxhighlight> は、指定した数字までの、ランダムなinteger(整数)を生成します。
例 ランダムなサンプルを再生したいときは:

<syntaxhighlight lang="Haskell">
d1 $ sound "arpy(3,8)" # n (irand 16)
</syntaxhighlight>

<syntaxhighlight lang="Haskell" inline>rand</syntaxhighlight> は、0から1の間の小数を生成します。

<syntaxhighlight lang="Haskell">
d1 $ sound "tink*16" # gain rand
</syntaxhighlight>

<syntaxhighlight lang="Haskell" inline>degradeBy</syntaxhighlight> でランダムに要素を外すことができます。数字は、サンプルが再生される確率を指定します。

<syntaxhighlight lang="Haskell">
d1 $ degradeBy 0.2 $ sound "tink*16"
</syntaxhighlight>

(<syntaxhighlight lang="Haskell" inline>degrade</syntaxhighlight> 単独での使用は、 <syntaxhighlight lang="Haskell" inline>degradeBy 0.5</syntaxhighlight> と同じ意味です)

または、 <syntaxhighlight lang="Haskell" inline>?</syntaxhighlight> を使い、50%の確率で要素を再生しないことができます。

<syntaxhighlight lang="Haskell">
d1 $ sound "bd sn:2? bd sn?"
</syntaxhighlight>