<languages/>
Après avoir configuré [[SuperDirt_MIDI_Tutorial | SuperDirt MIDI]], il sera très simple d'émettre une horloge MIDI. Cette fonctionnalité est toujours en développement, et sera simplifiée dans les prochaines versions.

Pour commencer, vous pouvez envoyer un certain nombre de messages horloge, par exemple, 48 par cycle :

<source>
p "midiclock" $ midicmd "midiClock*48" # s "midi"
</source>

Votre machine MIDI devrait dès lors s'ajuster au [[cps]] de Tidal. Notez qu'il est utile d'envoyer un message <code>stop</code> :

<source>
once $ midicmd "stop" # s "midi" 
</source>

Finalement, vous souhaiterez peut-être envoyer un message <code>start</code> au bon moment. La ligne suivante permet de lancer un nouveau message tout les quatre cycles :

<source>
p "midictl" $ midicmd "start/4" # s "midi" 
</source>

Une fois que tout est synchronisé, il est préférable de stopper l'envoi des messages <code>start</code> pour éviter les bugs et les glitchs :

<source>
p "midictl" $ silence
</source>

Toutefois, si vous utilisez <code>hush</code>, l'horloge MIDI s'arrêtera, ainsi que tout les autres patterns. Pour éviter cela, vous souhaiterez peut-être réécrire la fonction <code>hush</code> pour qu'elle ne stoppe que certains patterns particuliers :

<source>
let hush = mapM_ ($ silence) [d1,d2,d3,d4,d5,d6,d7,d8,d9,d10,d11,d12,d13,d14,d15,d16]
</source>

Parfois, les pulsations ont du mal à s'aligner entre SuperDirt et vos machines MIDI. Commencez par mettre la latence à 0 dans SuperCollider :

<source>
~midiOut.latency = 0;
</source>

Assurez-vous que la latence de votre machine est également à 0, puis ajustez le système progressivement, jusqu'à alignement. Si tout reste synchronisé lorsque vous changez le <code>cps</code>, tout est bon !