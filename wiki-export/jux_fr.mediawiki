<languages/>
{{DISPLAYTITLE:jux}} 
[[Type signature|Type]]: <source inline>jux :: (ControlPattern -> ControlPattern) -> ControlPattern -> ControlPattern</source>

La fonction '''jux''' crée un étrange effet stéréo. Elle applique une fonction sur un pattern, mais seulement sur le canal de droite. L'exemple suivant renverse le pattern dans le canal droit :

<source>
d1 $ slow 32 $ jux (rev) $ striate' 32 (1/16) $ sound "bev"
</source>

En passant une fonction à une fonction, il est possible d'enchaîner plusieurs transformations ( à l'aide de <code>.</code>). L'exemple suivant renverse le pattern et le ralentit :

<source>
d1 $ slow 32 $ jux ((# speed "0.5") . rev) $ striate' 32 (1/16) $ sound "bev"
</source>

= juxBy =

[[Type signature|Type]]: <source inline>juxBy :: Pattern Double -> (ControlPattern -> ControlPattern) -> ControlPattern -> ControlPattern</source>

Avec jux, le pattern originel et sa version altérée sont joués dans le canal de droite et dans le canal de gauche (i.e la valeur de <code>pan</code> est tantôt à 0, tantôt à 1). Parfois, cet effet est un peu trop extrême et se remarque de manière assez désagréable lors d'une écoute au casque. La variante '''juxBy''' ajoute un paramètre, qui permet de recentrer le décalage vers le centre. Par exemple :

<source>
d1 $ juxBy 0.5 (fast 2) $ sound "bd sn:1"
</source>

Dans l'exemple ci-dessus, la valeur de <code>pan</code> pour nos deux patterns sont de 0.25 et 0.75. Ces valeurs sont plus raisonnables que 0 et 1.

Voir aussi :
# [[superimpose]] qui permet de superposer deux patterns.
# [[off]] qui permet de superposer deux patterns et de les décaler dans le temps.

[[Category:Functions]]
[[Category:Higher-order functions]]