{{DISPLAYTITLE:every'}} 
[[Type signature|Type]]: <syntaxhighlight lang="haskell" inline>every' :: Int -> Int -> (Pattern a -> Pattern a) -> Pattern a -> Pattern a</syntaxhighlight>

'''every'''' is a generalisation of [[every]], taking one additional argument. The additional argument allows you to offset the function you are applying.

For example, <syntaxhighlight lang="haskell" inline>every' 3 0 (fast 2)</syntaxhighlight> will speed up the cycle on cycles 0,3,6,… whereas <syntaxhighlight lang="haskell" inline>every' 3 1 (fast 2)</syntaxhighlight> will transform the pattern on cycles 1,4,7,…

With this in mind, setting the second argument of <syntaxhighlight lang="haskell" inline>every'</syntaxhighlight> to 0 gives the equivalent <syntaxhighlight lang="haskell" inline>every</syntaxhighlight> function. For example, <syntaxhighlight lang="haskell" inline>every 3</syntaxhighlight> is equivalent to <syntaxhighlight lang="haskell" inline>every' 3 0</syntaxhighlight>.

[[Category:Functions]] [[Category:Higher-order functions]] [[Category:Conditional Transformers]]