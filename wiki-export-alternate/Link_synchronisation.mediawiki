= Network-based time synchronisation using the Link protocol by Ableton =

This requires tidal version 1.0.11 or later. It is experimental, so the interface will change in future releases of tidal, with additional functionality. For now though, it seems to work well.

To synchronise with the Link protocol, follow the following steps:

# Download and run Carabiner, which acts as a bridge between the link protocol and software like Tidal. You can get [https://github.com/Deep-Symmetry/carabiner/releases downloads for Windows and MacOs here]. Linux users can find [https://github.com/Deep-Symmetry/carabiner instructions for compiling here].
# Have another link-compatible app to hand that you want to sync to.
# Start tidal in your editor, and run the following to connect to carabiner: <source inline>sock <- carabiner tidal 4 (-0.14)</source>
# Run a tidal pattern (e.g. <source inline>d1 $ (sound "cp bd bd bd")</source>), change the bpm in another link-compatible app and see if it works.
# To change the BPM from tidal, you currently have to run e.g. `sendMsg sock "bpm 155"`

Please report your experience (good or bad) in this thread: https://toplap.lurk.org/t/link-support-preview/418

Thanks!

== Notes ==

You can't adjust <source inline>cps</source> in Tidal and have that change bpm in the link network yet - this will be fixed up soon.

You can tweak the startup command:
<source>
sock <- carabiner tidal 4 (-0.14)
</source>
The <source inline>4</source>. here is the number of beats per cycle, used to convert between link's beats-per-minute 
and tidal's cycles-per-second. You might prefer <source inline>2</source> (or <source inline>3</source> if you're doing a waltz).

The <source inline>-0.14</source> in the above is a latency time adjustment to get tidal in phase, you might need to tweak it, to get it bang on.

Each time you adjust these numbers you have to restart tidal, by restarting your editor. This will be more easily configured in the future.