{{DISPLAYTITLE:inv}} 
[[Type signature|Type]]: <syntaxhighlight lang="haskell" inline>inv :: Functor f => f Bool -> f Bool</syntaxhighlight>

'''inv''' inverts a collection of Boolean values, such as <syntaxhighlight lang="haskell" inline>Pattern Bool</syntaxhighlight>, thus turning <source inline>True</source> into <source inline>False</source> and visa-versa.

This is particularly useful when using functions such as [[struct]] that use a pattern of Booleans to control another pattern.

The following example gives a bass drum and a hi-hat on alternate beats by using <source inline>inv</source> along with <source inline>struct</source>
<source>
let pat = "[t f]*4"

d1 $ struct pat $ s "bd"

d2 $ struct (inv pat) $ s "hh27"
</source>

[[Category:Functions]]